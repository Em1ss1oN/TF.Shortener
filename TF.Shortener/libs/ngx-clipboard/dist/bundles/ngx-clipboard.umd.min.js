!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?factory(exports,require("@angular/core")):"function"==typeof define&&define.amd?define(["exports","@angular/core"],factory):factory((global.ngx=global.ngx||{},global.ngx.clipboard=global.ngx.clipboard||{}),global.ng.core)}(this,function(exports,_angular_core){"use strict";var __decorate$1=function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};exports.ClipboardDirective=function(){function ClipboardDirective(elmRef){this.elmRef=elmRef,this.cbOnSuccess=new _angular_core.EventEmitter,this.cbOnError=new _angular_core.EventEmitter}return ClipboardDirective.prototype.ngOnInit=function(){var option,_this=this;option=this.targetElm?{target:function(){return _this.targetElm}}:{text:function(){return _this.cbContent}},this.clipboard=new Clipboard(this.elmRef.nativeElement,option),this.clipboard.on("success",function(){return _this.cbOnSuccess.emit(!0)}),this.clipboard.on("error",function(){return _this.cbOnError.emit(!0)})},ClipboardDirective.prototype.ngOnDestroy=function(){this.clipboard&&this.clipboard.destroy()},ClipboardDirective}(),__decorate$1([_angular_core.Input("ngxClipboard"),__metadata("design:type",_angular_core.ElementRef)],exports.ClipboardDirective.prototype,"targetElm",void 0),__decorate$1([_angular_core.Input(),__metadata("design:type",String)],exports.ClipboardDirective.prototype,"cbContent",void 0),__decorate$1([_angular_core.Output(),__metadata("design:type",_angular_core.EventEmitter)],exports.ClipboardDirective.prototype,"cbOnSuccess",void 0),__decorate$1([_angular_core.Output(),__metadata("design:type",_angular_core.EventEmitter)],exports.ClipboardDirective.prototype,"cbOnError",void 0),exports.ClipboardDirective=__decorate$1([_angular_core.Directive({selector:"[ngxClipboard]"}),__metadata("design:paramtypes",[_angular_core.ElementRef])],exports.ClipboardDirective);var __decorate=function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r};exports.ClipboardModule=function(){function ClipboardModule(){}return ClipboardModule}(),exports.ClipboardModule=__decorate([_angular_core.NgModule({declarations:[exports.ClipboardDirective],exports:[exports.ClipboardDirective]})],exports.ClipboardModule),Object.defineProperty(exports,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-clipboard.umd.min.js.map
